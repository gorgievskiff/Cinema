@using Domain.DTO;
@using Domain.DomainModels;
@model List<Ticket>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Tickets";
}

@if (User.IsInRole("Admin"))
{
    <div class="container">
        <div class="content-heading">
            <div>
                Tickets
                <div>
                    <small>Add, delete or update tickets</small>
                </div>
            </div>
        </div>
    </div>
}


<div class="row">
    <div class="col-md-12 pt-3">
        <div class="card rounded">
            <div class="card-header text-white rounded">
                <div class="card-title text-dark">List of tickets</div>
            </div>
            <div>
                <div class="card-body">
                    <div class="row">
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="col-2 text-center mt-2">
                                @Html.ActionLink("Add Ticket", "Add", "Ticket", new {},
                            new {@class="mb-3 btn btn-primary rounded"
                            })
                            </div>
                            <div class="col-2">
                                <button type="button" onclick="exportExcel()" class="btn btn-warning rounded mt-2" data-bs-toggle="modal" data-bs-target="#exportToExcelModal">
                                    Export to excel
                                </button>
                            </div>
                        }
                        <div class="col-2">
                            <div class="form-floating mb-3 ml-3">
                                <input type="date" onchange="filter()" class="form-control rounded" id="dateFilter" placeholder="dd.mm.yyyy">
                                <label for="floatingInput">Date</label>
                            </div>
                        </div>
                    </div>

                    <div class="text-sm mb-3" id="listTicketDiv">
                       @await Html.PartialAsync("_ListTickets", Model)
                    </div>
                </div>

            </div>
        </div>
    </div>
    </div>

    @section Scripts{
        <script>
            function deleteTicket(ticketId) {
                $('#ticketId').val(ticketId);
                $('#deleteTicketTBody').html("");
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetTicket","Ticket")',
                    data: {
                        ticketId: ticketId
                    },
                    success: function (response) {
                        $('#deleteTicketTBody').append(`
                                                    <tr>
                                                        <td>
                                                            ${response.movie.name}
                                                        </td>
                                                        <td>
                                                            ${response.movie.rating}
                                                        </td>
                                                        <td>
                                                            ${response.movie.year}
                                                        </td>
                                                        <td>
                                                            ${response.price}$
                                                        </td>
                                                        <td>
                                                            ${response.seatNumber}
                                                        </td>
                                                        <td>
                                                            ${response.time}
                                                        </td>
                                                        <td>
                                                            ${moment(response.date).format('DD.MM.YYYY')}
                                                        </td>
                                                   </tr>`);
                        $('#deleteTicketModal').modal('show');
                    },
                })
            }
            function deleteTicketConfirmed() {
                var ticketId = $('#ticketId').val();
                $.ajax({
                    type: 'DELETE',
                    url: '@Url.Action("DeleteTicket","Ticket")',
                    data: {
                        ticketId: ticketId
                    },
                    success: function (response) {
                        location.reload();
                    },
                })
            }
            function filter(){
                var date = $('#dateFilter').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("FilterTickets","Ticket")',
                    data: {
                        date: date
                    },
                    success: function (response) {
                        $('#listTicketDiv').html(response)
                        //location.reload();
                    },
                })
            }
            function addToCart(ticketId){
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddTicketToCart","ShoppingCart")',
                    data: {
                        ticketId: ticketId
                    },
                    success: function (response) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'success',
                            title: 'Ticket sucessfully added to shopping cart!'
                        })
                    },
                })
            }
            function exportExcel(){
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetAll","Genre")',
                    data: {
                    },
                    success: function (response) {
                        var optionsAsString = "";
                        for (var i = 0; i < response.length; i++) {
                            optionsAsString += "<option value='" + response[i].id + "'>" + response[i].name + "</option>";
                        }
                        $('#excelExportGenreList').append(optionsAsString);
                    },
                })
            }
            function exportToExcelConfirmed(){
                var selectedGenre = $('#excelExportGenreList').val();
                $('#exportToExcelModal').modal('hide');

                fetch(`@Url.Action("ExportToExcel","Ticket")?genreId=${selectedGenre}`, {
                    method: "POST",
                    body: JSON.stringify({ genreId: selectedGenre }),
                    headers: { "Content-Type": "application/json" }
                }).then(response => {
                    if (!response.ok) {
                        console.log('eerrrrrr');
                        console.log(year);
                        throw new Error(response.statusText);
                    }
                    return response.blob();

                }).then(blob => {
                    let url = window.URL.createObjectURL(blob);
                    let link = document.createElement("a");
                    link.href = url;
                    link.download = `Tickets.xlsx`;
                    document.body.appendChild(link);
                    link.click();
                    link.remove();
                    window.URL.revokeObjectURL(url);
                    

                }).catch(error => {
                    
                });
            }
        </script>
    }



    @section BodyArea{
        <div class="modal fade" id="deleteTicketModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Are you sure you want to delete this ticket?</h1>
                        <button type="button" class="btn-close rounded" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="table-responsive">
                            <table class="table table-striped my-4 w-100" id="deleteTicketTable">
                                <thead>
                                    <tr>
                                        <th>Movie Name</th>
                                        <th>Rating</th>
                                        <th>Year</th>
                                        <th>Price</th>
                                        <th>Seat Number</th>
                                        <th>Time</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                                <tbody id="deleteTicketTBody">
                                </tbody>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <input type="text" hidden id="ticketId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" onclick="deleteTicketConfirmed()" class="btn btn-primary rounded">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="exportToExcelModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Add Genre</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="genreName">Select Genre</label>
                            <select class="form-select" id="excelExportGenreList" aria-label="Default select example">
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" onclick="exportToExcelConfirmed()" class="btn btn-success rounded">Export</button>
                    </div>
                </div>
            </div>
        </div>
    }
